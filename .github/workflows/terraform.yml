name: Terraform

on:
  pull_request:
    branches:
      - master
  push:

env:
  tf_folder: tf-project
  ssh_folder: ssh_key_folder
  ssh_file: id_rsa
  aws-region: "${{ secrets.AWS_REGION }}"
  TF_LOG: INFO
  # root_folder: "${{ runner.workspace }}"

jobs:
  plan:
    runs-on: ubuntu-20.04
    permissions:
      contents: read
      pull-requests: write
    defaults:
      run:
        working-directory: "${{ env.tf_folder }}"
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: AWS Credentials - Configure
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: "${{ secrets.AWS_REGION }}"
          aws-access-key-id: "${{ secrets.AWS_ACCESS_KEY_ID }}"
          aws-secret-access-key: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
      - name: SSH Key - Configure
        run: |
          mkdir -p ${{ env.ssh_folder }}
          echo "${{ secrets.SSH_PUBLIC_KEY }}" > ${{ env.ssh_folder }}/${{ env.ssh_file }}.pub
          chmod 600 ${{ env.ssh_folder }}/${{ env.ssh_file }}.pub -v
        working-directory: "${{ github.workspace }}"

      - name: Terraform - Init
        id: init
        run: terraform init -backend=true -backend-config="config/local/backend.hcl"

      - name: Terraform - Plan
        id: plan
        run: terraform plan -input=false -var-file=config/local/terraform.tfvars

      # - name: Terraform - Apply
      #   id: apply
      #   run: terraform apply -auto-approve -var-file=config/local/terraform.tfvars

      - name: Terraform Status
        if: steps.plan.outcome == 'failure' || steps.validate.outcome == 'failure' || steps.init.outcome == 'failure' || steps.fmt.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false
